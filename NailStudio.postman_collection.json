{
	"info": {
		"_postman_id": "6f96f4d8-d0ba-46a2-a763-f309275bab5a",
		"name": "NailStudio",
		"description": "Postman collection for an ITRex Java Lab project by Andrew Titov",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "admin invalid login - code 401",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"phone\": \"375291001010\",\r\n    \"password\": \"5555\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				},
				"description": "login for admin (user1) with invalid credits"
			},
			"response": []
		},
		{
			"name": "admin login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"phone\": \"375291001010\",\r\n    \"password\": \"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				},
				"description": "login for admin (user1)"
			},
			"response": []
		},
		{
			"name": "user2 register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Edward\",\r\n    \"lastName\": \"Scissorhands\",\r\n    \"phone\": \"375291001111\",\r\n    \"email\": \"IAmNotComplete@yahoo.com\",\r\n    \"password\": \"strongpassword1111\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/register",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"register"
					]
				},
				"description": "create user2"
			},
			"response": []
		},
		{
			"name": "user2 login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"phone\": \"375291001111\",\r\n    \"password\": \"strongpassword1111\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				},
				"description": "login for user2"
			},
			"response": []
		},
		{
			"name": "user3 register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Freddy\",\r\n    \"lastName\": \"Krueger\",\r\n    \"phone\": \"19008604Fred\",\r\n    \"email\": \"freshmeat@google.com\",\r\n    \"password\": \"pass2222\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/register",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"register"
					]
				},
				"description": "create user3"
			},
			"response": []
		},
		{
			"name": "user4 register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Logan\",\r\n    \"lastName\": \"Wolverine\",\r\n    \"phone\": \"1946484888\",\r\n    \"email\": \"hughjackman@gmail.com\",\r\n    \"password\": \"adamantium\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/register",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"register"
					]
				},
				"description": "create user4"
			},
			"response": []
		},
		{
			"name": "user5 register with invalid data - code 400",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"L\",\r\n    \"lastName\": \"W\",\r\n    \"phone\": \"1\",\r\n    \"email\": \"hu\",\r\n    \"password\": \"a1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/register",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"register"
					]
				},
				"description": "attempt to create user with invalid request"
			},
			"response": []
		},
		{
			"name": "add role STAFF for user2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"roleId\": 2,\r\n    \"roleType\": \"STAFF\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/add_role?userId=2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"add_role"
					],
					"query": [
						{
							"key": "userId",
							"value": "2"
						}
					]
				},
				"description": "add role \"staff\" for user2 (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "add role ADMIN for user2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"roleId\": 1,\r\n    \"roleType\": \"ADMIN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/add_role?userId=2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"add_role"
					],
					"query": [
						{
							"key": "userId",
							"value": "2"
						}
					]
				},
				"description": "add role \"admin\" for user2 (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "add role ADMIN for user2 again - code 400",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"roleId\": 1,\r\n    \"roleType\": \"ADMIN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/add_role?userId=2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"add_role"
					],
					"query": [
						{
							"key": "userId",
							"value": "2"
						}
					]
				},
				"description": "attempt to add role \"admin\" for user2 again (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get user with id 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/get/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"get",
						"1"
					]
				},
				"description": "get user1 (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get user with id 1000 - code 404",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/get/1000",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"get",
						"1000"
					]
				},
				"description": "attempt to get non-existing user with id 1000 (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get all users",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/get/all",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"get",
						"all"
					]
				},
				"description": "get all users (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get all users with pagination",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/get/all?page=2&size=1&sort=lastName,desc&sort=firstName,asc",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"get",
						"all"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						},
						{
							"key": "size",
							"value": "1"
						},
						{
							"key": "sort",
							"value": "lastName,desc"
						},
						{
							"key": "sort",
							"value": "firstName,asc"
						}
					]
				},
				"description": "get all users with pagination and sorting (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "update user2 info",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user2_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 2,\r\n    \"firstName\": \"Eddy\",\r\n    \"lastName\": null, \r\n    \"email\": null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/update",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"update"
					]
				},
				"description": "update info for user2 (using user2JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "change discount for user2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/change_discount?clientId=2&newDiscount=TEN",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"change_discount"
					],
					"query": [
						{
							"key": "clientId",
							"value": "2"
						},
						{
							"key": "newDiscount",
							"value": "TEN"
						}
					]
				},
				"description": "change discount for user2 (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "revoke role ADMIN for user2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"roleId\": 1,\r\n    \"roleType\": \"ADMIN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/revoke_role?userId=2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"revoke_role"
					],
					"query": [
						{
							"key": "userId",
							"value": "2"
						}
					]
				},
				"description": "revoke role \"admin\" for user2 (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "revoke role ADMIN for user2 again - code 400",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"roleId\": 1,\r\n    \"roleType\": \"ADMIN\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/users/revoke_role?userId=2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"revoke_role"
					],
					"query": [
						{
							"key": "userId",
							"value": "2"
						}
					]
				},
				"description": "attempt to revoke role \"admin\" for user2 who doesn't have this role (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "delete user4",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/users/delete/4",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"delete",
						"4"
					]
				},
				"description": "delete user with id 4 (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get all roles",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/roles",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"roles"
					]
				},
				"description": "get all roles (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get role with id 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/roles/get/id/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"roles",
						"get",
						"id",
						"1"
					]
				},
				"description": "get role with id 1 (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get role with id 500 - code 404",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/roles/get/id/500",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"roles",
						"get",
						"id",
						"500"
					]
				},
				"description": "attempt to get non-existing role with id 500 (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get role with name \"client\"",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/roles/get/name/cLiEnT",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"roles",
						"get",
						"name",
						"cLiEnT"
					]
				},
				"description": "get role with name \"client\" (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get role with non-existing name - code 404",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/roles/get/name/somethingElse",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"roles",
						"get",
						"name",
						"somethingElse"
					]
				},
				"description": "attempt to get non-existing role with a name \"somethingElse\" (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "create new record1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user2_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2022-01-01\",\r\n    \"time\": \"NINE\",\r\n    \"clientId\": 3,\r\n    \"staffId\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/records/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"records",
						"create"
					]
				},
				"description": "create record 1 for client with id 3, set staff with id 2 (using user2 JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "create new record2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user2_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2022-01-01\",\r\n    \"time\": \"SEVENTEEN\",\r\n    \"clientId\": 3,\r\n    \"staffId\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/records/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"records",
						"create"
					]
				},
				"description": "create record 2 for client with id 3, set staff with id 2 (using user2 JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "create new record1 again - code 409",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user2_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2022-01-01\",\r\n    \"time\": \"SEVENTEEN\",\r\n    \"clientId\": 3,\r\n    \"staffId\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/records/create",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"records",
						"create"
					]
				},
				"description": "trying to create booked record for staff with id 2 (using user2 JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get records for client user3",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user2_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/records/get/for_client/3",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"records",
						"get",
						"for_client",
						"3"
					]
				},
				"description": "get records for client with id 3 (using user2 JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get records for staff user2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user2_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/records/get/for_staff/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"records",
						"get",
						"for_staff",
						"2"
					]
				},
				"description": "get records for staff with id 2 (using user2 JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get all records",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/records/get/all",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"records",
						"get",
						"all"
					]
				},
				"description": "get all records (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get all records with pagination",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/records/get/all?page=1&size=1&sort=date,desc&sort=time,asc",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"records",
						"get",
						"all"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "size",
							"value": "1"
						},
						{
							"key": "sort",
							"value": "date,desc"
						},
						{
							"key": "sort",
							"value": "time,asc"
						}
					]
				},
				"description": "get all records with pagination (using admin JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "get free time slots for staff user2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user2_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/records/get/free/staff/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"records",
						"get",
						"free",
						"staff",
						"2"
					]
				},
				"description": "get free time slots for future 3 months for staff with id 2 (using user2 JWT token obtained after login)"
			},
			"response": []
		},
		{
			"name": "delete record with id 2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{admin_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:8080/records/delete/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"records",
						"delete",
						"2"
					]
				},
				"description": "delete record with id 2 (using admin JWT token obtained after login)"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "admin_token",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxLDM3NTI5MTAwMTAxMCIsImlzcyI6Im9yZy5pdHJleC5qYXZhLmxhYiIsImlhdCI6MTYzODcwMTMzOSwiZXhwIjoxNjM4Nzg3NzM5fQ.vh3cYCLoqZGk4Je8YBqrvkMkfLDDZ8YPsDrx4bFQZf66aqc1HX81DKa5v-7PwYDyddvETtfl1Ab3Bk0No1qhiA"
		},
		{
			"key": "user2_token",
			"value": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIyLDM3NTI5MTAwMTExMSIsImlzcyI6Im9yZy5pdHJleC5qYXZhLmxhYiIsImlhdCI6MTYzODcwMTk1MCwiZXhwIjoxNjM4Nzg4MzUwfQ.m0HL5TYOkLi5lbk2u_v7rxKkk7UQ1Yht6UNMWTZxrudmHTW2vRl8KKnRWEGJR_e90gE5isuAgIA3wqN2p6fhCw"
		}
	]
}